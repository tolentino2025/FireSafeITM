import { useState } from "react";
import { Link } from "wouter";
import { useForm } from "react-hook-form";
import { Header } from "@/components/layout/header";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { ArrowLeft, ArrowRight, CheckCircle, Save, ShieldCheck, AlertTriangle, FileCheck } from "lucide-react";
import { FormActions } from "@/components/form-actions";

type FormData = {
  owner: string;
  ownerAddress: string;
  propertyEvaluated: string;
  propertyAddress: string;
  workDate: string;
  [key: string]: string;
};

export default function HazardEvaluationForm() {
  const [currentSection, setCurrentSection] = useState("general");
  const form = useForm<FormData>({
    defaultValues: {
      owner: "",
      ownerAddress: "",
      propertyEvaluated: "",
      propertyAddress: "",
      workDate: "",
    },
  });

  const sections = [
    { id: "general", title: "Informa√ß√µes Iniciais", icon: "üìã" },
    { id: "identification", title: "Identifica√ß√£o da Ocupa√ß√£o", icon: "üè¢" },
    { id: "protection-assessment", title: "Avalia√ß√£o da Prote√ß√£o", icon: "üîí" },
    { id: "unsprinklered-areas", title: "√Åreas Sem Sprinklers", icon: "üö´" },
    { id: "water-supply", title: "Suprimento de √Ågua", icon: "üíß" },
    { id: "certification", title: "Certifica√ß√£o do Avaliador", icon: "‚úÖ" },
  ];

  const onSubmit = (data: FormData) => {
    console.log("Form submitted:", data);
  };

  const renderRadioGroup = (name: string, label: string, includeExplanation = false) => (
    <div className="space-y-3">
      <FormField
        control={form.control}
        name={name}
        render={({ field }) => (
          <FormItem className="space-y-3">
            <FormLabel className="text-sm font-medium text-foreground">{label}</FormLabel>
            <FormControl>
              <RadioGroup
                onValueChange={field.onChange}
                value={field.value}
                className="flex space-x-6"
              >
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="sim" id={`${name}-sim`} />
                  <label htmlFor={`${name}-sim`} className="text-sm text-foreground">Sim</label>
                </div>
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="nao" id={`${name}-nao`} />
                  <label htmlFor={`${name}-nao`} className="text-sm text-foreground">N√£o</label>
                </div>
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="na" id={`${name}-na`} />
                  <label htmlFor={`${name}-na`} className="text-sm text-foreground">N/A</label>
                </div>
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="unknown" id={`${name}-unknown`} />
                  <label htmlFor={`${name}-unknown`} className="text-sm text-foreground">?</label>
                </div>
              </RadioGroup>
            </FormControl>
          </FormItem>
        )}
      />
      {includeExplanation && (
        <FormField
          control={form.control}
          name={`${name}_explanation`}
          render={({ field }) => (
            <FormItem>
              <FormLabel className="text-xs text-muted-foreground">Explica√ß√£o (se "N√£o" ou "?"):</FormLabel>
              <FormControl>
                <Textarea {...field} className="text-sm" rows={2} data-testid={`textarea-${name}-explanation`} />
              </FormControl>
            </FormItem>
          )}
        />
      )}
    </div>
  );

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-6">
          <div>
            <h1 className="text-3xl font-bold text-foreground mb-2" data-testid="title-hazard-evaluation-form">
              Avalia√ß√£o de Risco do Sistema de Sprinklers de Inc√™ndio
            </h1>
            <p className="text-muted-foreground">
              NFPA 25 - Vers√£o Integral (P√°ginas 63-66)
            </p>
          </div>
          <div className="flex space-x-3">
            <Link href="/certificates-module">
              <Button variant="outline" data-testid="button-back-module">
                <ArrowLeft className="mr-2 w-4 h-4" />
                Voltar ao M√≥dulo
              </Button>
            </Link>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Sidebar Navigation */}
          <div className="lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle className="text-lg" data-testid="title-navigation">Navega√ß√£o do Formul√°rio</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2">
                {sections.map((section) => (
                  <button
                    key={section.id}
                    onClick={() => setCurrentSection(section.id)}
                    className={`w-full text-left p-3 rounded-lg transition-colors ${
                      currentSection === section.id
                        ? "bg-primary text-primary-foreground"
                        : "bg-secondary hover:bg-secondary/80 text-secondary-foreground"
                    }`}
                    data-testid={`nav-${section.id}`}
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-lg">{section.icon}</span>
                      <span className="text-sm font-medium">{section.title}</span>
                    </div>
                  </button>
                ))}
              </CardContent>
            </Card>

            {/* Info Card */}
            <Card className="mt-4">
              <CardHeader>
                <CardTitle className="text-sm flex items-center">
                  <ShieldCheck className="mr-2 w-4 h-4 text-red-600" />
                  Avalia√ß√£o de Risco
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-xs">
                <div className="text-muted-foreground">
                  Usado para avaliar se o sistema existente ainda √© adequado ap√≥s mudan√ßas
                </div>
                <div className="text-red-600">
                  Todos os "?" devem ser resolvidos para completar a avalia√ß√£o
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Main Form */}
          <div className="lg:col-span-3">
            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)}>
                <Card>
                  <CardHeader>
                    <CardTitle data-testid="title-current-section">
                      {sections.find(s => s.id === currentSection)?.title}
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    
                    {/* General Information */}
                    {currentSection === "general" && (
                      <div className="space-y-4">
                        <div className="bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800">
                          <h3 className="font-medium text-blue-800 dark:text-blue-200 mb-2">Informa√ß√µes Iniciais</h3>
                          <p className="text-sm text-blue-700 dark:text-blue-300">
                            Todas as respostas se referem √† avalia√ß√£o de risco atual realizada nesta data
                          </p>
                        </div>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <FormField
                            control={form.control}
                            name="owner"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Propriet√°rio</FormLabel>
                                <FormControl>
                                  <Input {...field} data-testid="input-owner" />
                                </FormControl>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                          <FormField
                            control={form.control}
                            name="propertyEvaluated"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Propriedade sendo avaliada</FormLabel>
                                <FormControl>
                                  <Input {...field} data-testid="input-property-evaluated" />
                                </FormControl>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                        </div>
                        
                        <FormField
                          control={form.control}
                          name="ownerAddress"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>Endere√ßo do Propriet√°rio</FormLabel>
                              <FormControl>
                                <Textarea {...field} data-testid="input-owner-address" />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />

                        <FormField
                          control={form.control}
                          name="propertyAddress"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>Endere√ßo da Propriedade</FormLabel>
                              <FormControl>
                                <Textarea {...field} data-testid="input-property-address" />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />

                        <FormField
                          control={form.control}
                          name="workDate"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>Data do trabalho</FormLabel>
                              <FormControl>
                                <Input type="date" {...field} data-testid="input-work-date" />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                    )}

                    {/* Identification */}
                    {currentSection === "identification" && (
                      <div className="space-y-6">
                        <div className="bg-green-50 dark:bg-green-950/20 p-4 rounded-lg border border-green-200 dark:border-green-800">
                          <h3 className="font-medium text-green-800 dark:text-green-200 mb-2">Se√ß√£o 1. Identifica√ß√£o da Ocupa√ß√£o e Riscos de Armazenamento com Sprinklers</h3>
                          <p className="text-sm text-green-700 dark:text-green-300">
                            Use p√°ginas adicionais conforme necess√°rio
                          </p>
                        </div>

                        <div className="space-y-6">
                          <h4 className="font-medium text-foreground border-b pb-2">Tabela de √Åreas</h4>
                          
                          <div className="grid grid-cols-1 gap-4">
                            <FormField
                              control={form.control}
                              name="area_property"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>√Årea da Propriedade (Listar √°reas sem sprinklers separadamente na Se√ß√£o 3)</FormLabel>
                                  <FormControl>
                                    <Textarea {...field} data-testid="input-area-property" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                            
                            <FormField
                              control={form.control}
                              name="system_type_sprinklers"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Tipo de Sistema e Sprinklers</FormLabel>
                                  <FormControl>
                                    <Textarea {...field} data-testid="input-system-type" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />

                            <FormField
                              control={form.control}
                              name="system_design_capacity"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Capacidade de Projeto do Sistema</FormLabel>
                                  <FormControl>
                                    <Textarea {...field} data-testid="input-design-capacity" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />

                            <FormField
                              control={form.control}
                              name="protected_hazard"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Risco Protegido (Usos ou arranjos de armazenamento, incluindo mercadoria)</FormLabel>
                                  <FormControl>
                                    <Textarea {...field} data-testid="input-protected-hazard" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />

                            <FormField
                              control={form.control}
                              name="necessary_improvements"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Melhorias Necess√°rias para Lidar com o Risco</FormLabel>
                                  <FormControl>
                                    <Textarea {...field} data-testid="input-necessary-improvements" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                          </div>
                        </div>
                      </div>
                    )}

                    {/* Protection Assessment */}
                    {currentSection === "protection-assessment" && (
                      <div className="space-y-6">
                        <div className="bg-yellow-50 dark:bg-yellow-950/20 p-4 rounded-lg border border-yellow-200 dark:border-yellow-800">
                          <h3 className="font-medium text-yellow-800 dark:text-yellow-200 mb-2">Se√ß√£o 2. Avalia√ß√£o da Prote√ß√£o</h3>
                          <p className="text-sm text-yellow-700 dark:text-yellow-300">
                            Para cada √°rea da propriedade avaliada na Se√ß√£o 1, responda √†s seguintes perguntas e explique todas as respostas "n√£o" e "?"
                          </p>
                        </div>

                        <div className="space-y-6">
                          {renderRadioGroup(
                            "sprinklers_correct_type",
                            "a. Todos os sprinklers s√£o do tipo correto para sua aplica√ß√£o?",
                            true
                          )}
                          {renderRadioGroup(
                            "obstructions_acceptable",
                            "b. As obstru√ß√µes aos sprinklers em todas as √°reas est√£o dentro dos limites aceit√°veis para os tipos espec√≠ficos de sprinklers usados?",
                            true
                          )}
                          {renderRadioGroup(
                            "hazards_consistent",
                            "c. Os riscos associados a todas as √°reas de ocupa√ß√£o s√£o consistentes com os riscos t√≠picos para essa classifica√ß√£o de risco de ocupa√ß√£o?",
                            true
                          )}
                          {renderRadioGroup(
                            "fuel_pile_heights",
                            "d. As pilhas de combust√≠veis localizadas dentro das √°reas de ocupa√ß√£o s√£o limitadas a alturas apropriadas?",
                            true
                          )}
                          {renderRadioGroup(
                            "storage_areas_managed",
                            "e. As √°reas de armazenamento diversas e dedicadas est√£o devidamente identificadas e gerenciadas?",
                            true
                          )}
                          {renderRadioGroup(
                            "dedicated_storage_protected",
                            "f. Todas as √°reas de armazenamento dedicadas s√£o protegidas de acordo com a configura√ß√£o de armazenamento e classifica√ß√£o de mercadoria adequadas?",
                            true
                          )}
                          {renderRadioGroup(
                            "flammable_liquids_treated",
                            "g. O armazenamento ou uso de l√≠quidos inflam√°veis, l√≠quidos combust√≠veis ou produtos em aerossol em qualquer √°rea √© devidamente tratado?",
                            true
                          )}
                          {renderRadioGroup(
                            "idle_pallets_protected",
                            "h. Todo o armazenamento de paletes ociosos est√° devidamente protegido?",
                            true
                          )}
                          {renderRadioGroup(
                            "hazardous_materials_present",
                            "i. Existe alguma presen√ßa de filme de nitrato, pl√°stico de piroxilina, cilindros de g√°s comprimido ou liquefeito, oxidantes l√≠quidos ou s√≥lidos, ou formula√ß√µes de per√≥xido org√¢nico, exceto onde especificamente tratado por medidas de prote√ß√£o apropriadas?",
                            true
                          )}
                          {renderRadioGroup(
                            "sprinklers_properly_spaced",
                            "j. Todos os sprinklers est√£o espa√ßados apropriadamente para o risco e o tipo de sprinkler?",
                            true
                          )}
                          {renderRadioGroup(
                            "heat_cooling_adequate",
                            "k. As fontes de calor e resfriamento dispon√≠veis parecem adequadas para o tipo de sistema e a classifica√ß√£o de temperatura dos sprinklers?",
                            true
                          )}

                          <FormField
                            control={form.control}
                            name="explanation_no_unknown"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Explica√ß√£o das respostas "n√£o" e "?"</FormLabel>
                                <FormControl>
                                  <Textarea 
                                    {...field} 
                                    rows={6}
                                    placeholder="Forne√ßa explica√ß√µes detalhadas para todas as respostas 'n√£o' e '?' identificando a linha e coluna correspondente..."
                                    data-testid="textarea-explanation-no-unknown"
                                  />
                                </FormControl>
                              </FormItem>
                            )}
                          />
                        </div>
                      </div>
                    )}

                    {/* Unsprinklered Areas */}
                    {currentSection === "unsprinklered-areas" && (
                      <div className="space-y-6">
                        <div className="bg-red-50 dark:bg-red-950/20 p-4 rounded-lg border border-red-200 dark:border-red-800">
                          <h3 className="font-medium text-red-800 dark:text-red-200 mb-2">Se√ß√£o 3. Avalia√ß√£o de √Åreas Sem Sprinklers</h3>
                          <p className="text-sm text-red-700 dark:text-red-300">
                            Identifica√ß√£o e avalia√ß√£o de √°reas n√£o protegidas por sprinklers
                          </p>
                        </div>

                        <div className="space-y-6">
                          <h4 className="font-medium text-foreground border-b pb-2">Tabela de √Åreas Sem Sprinklers</h4>
                          
                          <FormField
                            control={form.control}
                            name="unsprinklered_area"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>√Årea da Propriedade para a Qual a Prote√ß√£o N√£o √© Fornecida</FormLabel>
                                <FormControl>
                                  <Textarea {...field} data-testid="input-unsprinklered-area" />
                                </FormControl>
                              </FormItem>
                            )}
                          />
                          
                          <FormField
                            control={form.control}
                            name="lack_protection_basis"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Base da Falta de Prote√ß√£o (se conhecida)</FormLabel>
                                <FormControl>
                                  <Textarea {...field} data-testid="input-lack-protection-basis" />
                                </FormControl>
                              </FormItem>
                            )}
                          />

                          <FormField
                            control={form.control}
                            name="omission_basis_codes"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Base para Omiss√£o Sob C√≥digos/Normas Atuais</FormLabel>
                                <FormControl>
                                  <Textarea {...field} data-testid="input-omission-basis" />
                                </FormControl>
                              </FormItem>
                            )}
                          />
                        </div>
                      </div>
                    )}

                    {/* Water Supply */}
                    {currentSection === "water-supply" && (
                      <div className="space-y-6">
                        <div className="bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800">
                          <h3 className="font-medium text-blue-800 dark:text-blue-200 mb-2">Se√ß√£o 4. Avalia√ß√£o do Suprimento de √Ågua</h3>
                          <p className="text-sm text-blue-700 dark:text-blue-300">
                            An√°lise da adequa√ß√£o do suprimento de √°gua para o sistema
                          </p>
                        </div>

                        <div className="space-y-6">
                          <FormField
                            control={form.control}
                            name="pressure_reduction_investigation"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>
                                  Se esta avalia√ß√£o de risco for resultado de uma redu√ß√£o na press√£o residual durante inspe√ß√µes de rotina, 
                                  explique os resultados da investiga√ß√£o feita para determinar as raz√µes desta mudan√ßa
                                </FormLabel>
                                <FormControl>
                                  <Textarea 
                                    {...field} 
                                    rows={5}
                                    data-testid="textarea-pressure-investigation"
                                  />
                                </FormControl>
                              </FormItem>
                            )}
                          />
                          
                          <FormField
                            control={form.control}
                            name="water_supply_acceptability"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Explique a base da aceitabilidade cont√≠nua do suprimento de √°gua ou melhorias propostas</FormLabel>
                                <FormControl>
                                  <Textarea 
                                    {...field} 
                                    rows={5}
                                    data-testid="textarea-water-supply-acceptability"
                                  />
                                </FormControl>
                              </FormItem>
                            )}
                          />
                        </div>
                      </div>
                    )}

                    {/* Certification */}
                    {currentSection === "certification" && (
                      <div className="space-y-6">
                        <div className="bg-green-50 dark:bg-green-950/20 p-4 rounded-lg border border-green-200 dark:border-green-800">
                          <h3 className="font-medium text-green-800 dark:text-green-200 mb-2 flex items-center">
                            <FileCheck className="mr-2 w-4 h-4" />
                            Se√ß√£o 5. Informa√ß√µes e Certifica√ß√£o do Avaliador de Risco
                          </h3>
                          <p className="text-sm text-green-700 dark:text-green-300">
                            Certifica√ß√£o profissional do avaliador respons√°vel
                          </p>
                        </div>

                        <div className="space-y-6">
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <FormField
                              control={form.control}
                              name="evaluator_name"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Avaliador</FormLabel>
                                  <FormControl>
                                    <Input {...field} data-testid="input-evaluator-name" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                            <FormField
                              control={form.control}
                              name="evaluator_company"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Empresa</FormLabel>
                                  <FormControl>
                                    <Input {...field} data-testid="input-evaluator-company" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                          </div>

                          <FormField
                            control={form.control}
                            name="company_address"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Endere√ßo da Empresa</FormLabel>
                                <FormControl>
                                  <Textarea {...field} data-testid="input-company-address" />
                                </FormControl>
                              </FormItem>
                            )}
                          />

                          <div className="bg-gray-50 dark:bg-gray-900/50 p-4 rounded-lg border">
                            <p className="text-sm text-foreground mb-4">
                              <strong>Declara√ß√£o:</strong> Declaro que as informa√ß√µes neste formul√°rio est√£o corretas no momento e local da minha revis√£o da minha avalia√ß√£o.
                            </p>
                          </div>

                          {renderRadioGroup(
                            "evaluation_complete",
                            "Esta avalia√ß√£o de risco est√° conclu√≠da? (Nota: Todos os \"?\" devem ser resolvidos.)"
                          )}

                          <FormField
                            control={form.control}
                            name="explain_if_not_complete"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Explique se a resposta n√£o for "sim"</FormLabel>
                                <FormControl>
                                  <Textarea {...field} data-testid="textarea-explain-not-complete" />
                                </FormControl>
                              </FormItem>
                            )}
                          />

                          {renderRadioGroup(
                            "deficiencies_identified",
                            "Foram identificadas defici√™ncias na prote√ß√£o que deveriam ser melhoradas ou corrigidas?"
                          )}

                          <FormField
                            control={form.control}
                            name="improvements_summary"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Resuma as melhorias das corre√ß√µes necess√°rias</FormLabel>
                                <FormControl>
                                  <Textarea 
                                    {...field} 
                                    rows={5}
                                    data-testid="textarea-improvements-summary"
                                  />
                                </FormControl>
                              </FormItem>
                            )}
                          />

                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <FormField
                              control={form.control}
                              name="license_certification_number"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>N√∫mero da Licen√ßa ou Certifica√ß√£o (se aplic√°vel)</FormLabel>
                                  <FormControl>
                                    <Input {...field} data-testid="input-license-number" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                            <FormField
                              control={form.control}
                              name="signature_date"
                              render={({ field }) => (
                                <FormItem>
                                  <FormLabel>Data</FormLabel>
                                  <FormControl>
                                    <Input type="date" {...field} data-testid="input-signature-date" />
                                  </FormControl>
                                </FormItem>
                              )}
                            />
                          </div>

                          <div className="bg-blue-50 dark:bg-blue-950/20 p-3 rounded-lg border border-blue-200 dark:border-blue-800">
                            <h4 className="font-medium text-blue-800 dark:text-blue-200 mb-2">Observa√ß√µes Importantes</h4>
                            <ul className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
                              <li>‚Ä¢ A assinatura digital do avaliador ser√° capturada no momento da finaliza√ß√£o</li>
                              <li>‚Ä¢ Este formul√°rio deve ser usado ap√≥s mudan√ßas na ocupa√ß√£o, uso, processo ou materiais</li>
                              <li>‚Ä¢ Todas as respostas "?" devem ser investigadas e resolvidas</li>
                              <li>‚Ä¢ Manter c√≥pia para registros da propriedade e autoridades competentes</li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* Navigation Buttons */}
                    <div className="flex justify-between pt-6 border-t">
                      <div>
                        {sections.findIndex(s => s.id === currentSection) > 0 && (
                          <Button
                            type="button"
                            variant="outline"
                            onClick={() => {
                              const currentIndex = sections.findIndex(s => s.id === currentSection);
                              setCurrentSection(sections[currentIndex - 1].id);
                            }}
                            data-testid="button-previous-section"
                          >
                            <ArrowLeft className="mr-2 w-4 h-4" />
                            Anterior
                          </Button>
                        )}
                      </div>
                      
                      <div className="flex space-x-3">
                        {sections.findIndex(s => s.id === currentSection) < sections.length - 1 ? (
                          <Button
                            type="button"
                            onClick={() => {
                              const currentIndex = sections.findIndex(s => s.id === currentSection);
                              setCurrentSection(sections[currentIndex + 1].id);
                            }}
                            data-testid="button-next-section"
                          >
                            Pr√≥ximo
                            <ArrowRight className="ml-2 w-4 h-4" />
                          </Button>
                        ) : (
                          <Button type="submit" data-testid="button-submit-form">
                            <CheckCircle className="mr-2 w-4 h-4" />
                            Finalizar Avalia√ß√£o
                          </Button>
                        )}
                      </div>
                    </div>

                    {/* Form Actions - Show only on last section */}
                    {sections.findIndex(s => s.id === currentSection) === sections.length - 1 && (
                      <FormActions
                        formData={form.getValues()}
                        formTitle="Avalia√ß√£o de Risco do Sistema de Sprinklers"
                        onValidateForm={() => {
                          const values = form.getValues();
                          return Boolean(values.owner && values.propertyEvaluated && values.workDate);
                        }}
                      />
                    )}
                  </CardContent>
                </Card>
              </form>
            </Form>
          </div>
        </div>
      </main>
    </div>
  );
}